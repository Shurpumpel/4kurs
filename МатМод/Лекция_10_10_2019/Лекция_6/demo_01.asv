>> help ode23
 ODE23  Solve non-stiff differential equations, low order method.
    [TOUT,YOUT] = ODE23(ODEFUN,TSPAN,Y0) with TSPAN = [T0 TFINAL] integrates 
    the system of differential equations y' = f(t,y) from time T0 to TFINAL 
    with initial conditions Y0. ODEFUN is a function handle. For a scalar T
    and a vector Y, ODEFUN(T,Y) must return a column vector corresponding 
    to f(t,y). Each row in the solution array YOUT corresponds to a time 
    returned in the column vector TOUT.  To obtain solutions at specific 
    times T0,T1,...,TFINAL (all increasing or all decreasing), use TSPAN = 
    [T0 T1 ... TFINAL].     
    
    [TOUT,YOUT] = ODE23(ODEFUN,TSPAN,Y0,OPTIONS) solves as above with default
    integration properties replaced by values in OPTIONS, an argument created 
    with the ODESET function. See ODESET for details. Commonly used options
    are scalar relative error tolerance 'RelTol' (1e-3 by default) and vector
    of absolute error tolerances 'AbsTol' (all components 1e-6 by default).
    If certain components of the solution must be non-negative, use
    ODESET to set the 'NonNegative' property to the indices of these
    components.
    
    ODE23 can solve problems M(t,y)*y' = f(t,y) with mass matrix M that is
    nonsingular. Use ODESET to set the 'Mass' property to a function handle 
    MASS if MASS(T,Y) returns the value of the mass matrix. If the mass matrix 
    is constant, the matrix can be used as the value of the 'Mass' option. If
    the mass matrix does not depend on the state variable Y and the function
    MASS is to be called with one input argument T, set 'MStateDependence' to
    'none'. ODE15S and ODE23T can solve problems with singular mass matrices.  
 
    [TOUT,YOUT,TE,YE,IE] = ODE23(ODEFUN,TSPAN,Y0,OPTIONS) with the 'Events'
    property in OPTIONS set to a function handle EVENTS, solves as above 
    while also finding where functions of (T,Y), called event functions, 
    are zero. For each function you specify whether the integration is 
    to terminate at a zero and whether the direction of the zero crossing 
    matters. These are the three column vectors returned by EVENTS: 
    [VALUE,ISTERMINAL,DIRECTION] = EVENTS(T,Y). For the I-th event function: 
    VALUE(I) is the value of the function, ISTERMINAL(I)=1 if the integration 
    is to terminate at a zero of this event function and 0 otherwise. 
    DIRECTION(I)=0 if all zeros are to be computed (the default), +1 if only 
    zeros where the event function is increasing, and -1 if only zeros where 
    the event function is decreasing. Output TE is a column vector of times 
    at which events occur. Rows of YE are the corresponding solutions, and 
    indices in vector IE specify which event occurred.    
 
    SOL = ODE23(ODEFUN,[T0 TFINAL],Y0...) returns a structure that can be
    used with DEVAL to evaluate the solution or its first derivative at 
    any point between T0 and TFINAL. The steps chosen by ODE23 are returned 
    in a row vector SOL.x.  For each I, the column SOL.y(:,I) contains 
    the solution at SOL.x(I). If events were detected, SOL.xe is a row vector 
    of points at which events occurred. Columns of SOL.ye are the corresponding 
    solutions, and indices in vector SOL.ie specify which event occurred. 
 
    Example    
          [t,y]=ode23(@vdp1,[0 20],[2 0]);   
          plot(t,y(:,1));
      solves the system y' = vdp1(t,y), using the default relative error
      tolerance 1e-3 and the default absolute tolerance of 1e-6 for each
      component, and plots the first component of the solution. 
 
    Class support for inputs TSPAN, Y0, and the result of ODEFUN(T,Y):
      float: double, single
 
    See also 
        other ODE solvers:    ode45, ode113, ode15s, ode23s, ode23t, ode23tb
        implicit ODEs:        ode15i
        options handling:     odeset, odeget
        output functions:     odeplot, odephas2, odephas3, odeprint
        evaluating solution:  deval
        ODE examples:         rigidode, ballode, orbitode
        function handles:     function_handle 
 
    NOTE: 
      The interpretation of the first input argument of the ODE solvers and 
      some properties available through ODESET have changed in MATLAB 6.0.
      Although we still support the v5 syntax, any new functionality is 
      available only with the new syntax.  To see the v5 help, type in 
      the command line  
          more on, type ode23, more off

    Reference page in Help browser
       doc ode23

>> help vdp1
 VDP1  Evaluate the van der Pol ODEs for mu = 1
 
    See also ode113, ode23, ode45.

>> [T,Y]=ode23(@yp1,[0,pi],1);
>> plot(T,cos(T),'g',T,Y,'r*'),grid
>> figure
>> plot(T,cos(T)-Y),grid
>> 

>> figure
>> plot(TT,cos(TT),'g',TT,YY,'r*'),grid
>> figure
>> plot(TT,cos(TT)-YY,'r*'),grid
>> figure
>> plot(TT,cos(TT)-YY,'r'),grid
>> 